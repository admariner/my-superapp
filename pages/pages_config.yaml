__init__.py:
  NAME: Home
  ICON: 🏠
  DESCRIPTION: Welcome to my app!
  SIDEBAR: radio
  TAG:

statistical_tests:
  __init__.py:
    NAME: Statistical Tests
    ICON: 🔢
    DESCRIPTION: Perform several statistical tests!
    SIDEBAR: radio
    TAG: 📚 Statistics

  ab_test.py:
    NAME: A/B Test
    ICON: 🆎
    DESCRIPTION: |
      Perform A/B tests!
      > numpy, scipy
    TAG:

  chi2_test.py:
    NAME: Chi-squared Test
    ICON: 🆇
    DESCRIPTION: |
      Perform chi-squared tests!
      > numpy, scipy
    TAG:

  t-test.py:
    NAME: T-test
    ICON: 🆃
    DESCRIPTION: |
      Perform T-tests!
      > numpy, scipy
    TAG:

dimensionality_reduction:
  __init__.py:
    NAME: Dimensionality Reduction
    ICON: 🔽
    DESCRIPTION: Reduce dimensionality for high-D data!
    SIDEBAR: radio
    TAG: 📚 Statistics

  pca.py:
    NAME: PCA
    ICON: ⭕
    DESCRIPTION: |
      Perform Principal Component Analysis!
      > pandas, scikit-learn, plotly
    TAG:

  t-sne.py:
    NAME: t-SNE
    ICON: 📊
    DESCRIPTION: |
      Perform t-distributed Stochastic Neighbor Embedding!
      > pandas, scikit-learn, plotly
    TAG:

  umap.py:
    NAME: UMAP
    ICON: 🗺️
    DESCRIPTION: |
      Perform Uniform Manifold Approximation and Projection!
      >
    TAG:

landmarks:
  __init__.py:
    NAME: Landmarks Detection
    ICON: 📍
    DESCRIPTION: Perform live landmark detection using your webcam!
    SIDEBAR: radio
    TAG: 👁️ Computer Vision

  face_landmarks.py:
    NAME: Face Mesh
    ICON: 👤
    DESCRIPTION: |
      Detect face landmarks using Mediapipe!
      > OpenCV, Mediapipe, WebRTC
    TAG:

  pose_landmarks.py:
    NAME: Pose Landmarks
    ICON: 🤸‍♂️
    DESCRIPTION: |
      Detect body pose landmarks using Mediapipe!
      > OpenCV, Mediapipe, WebRTC
    TAG:

object_detection:
  __init__.py:
    NAME: Object Detection
    ICON: 🔍
    DESCRIPTION: Perform live object detection using your webcam!
    SIDEBAR: radio
    TAG: 👁️ Computer Vision

  face_detection.py:
    NAME: Face Detection
    ICON: 👀
    DESCRIPTION: |
      Detect one or several faces using Mediapipe!
      > OpenCV, Mediapipe, WebRTC
    TAG:

  multi_objects.py:
    NAME: Multi-Object Detection
    ICON: 📦
    DESCRIPTION: |
      Detect 80 unique labels using YOLOv8!
      > OpenCV, ultralytics, WebRTC
    TAG:

image_generation:
  __init__.py:
    NAME: Image Generation
    ICON: 🎨
    DESCRIPTION: Generate pictures with AI!
    SIDEBAR: radio
    TAG: 🧠 Generative AI

  dall_e.py:
    NAME: DALL·E
    ICON: 🖼️
    DESCRIPTION: DALL·E model from OpenAI
    TAG:

  stable_diffusion.py:
    NAME: Stable Diffusion
    ICON: 🖼️
    DESCRIPTION: Stable Diffusion model from Stability AI
    TAG:

large_language_models:
  __init__.py:
    NAME: Large Language Models
    ICON: 💬
    DESCRIPTION: Interact with large language models!
    SIDEBAR: radio
    TAG: 🧠 Generative AI

  chatbot.py:
    NAME: Basic Chatbot
    ICON: 👋
    DESCRIPTION: A regular chatbot.
    TAG: 🤖 Chatbots

  chatbot_rag.py:
    NAME: Chatbot with RAG
    ICON: 📄
    DESCRIPTION: A chatbot with RAG (retrieval augmented generation).
    TAG: 🤖 Chatbots

  chatbot_tools.py:
    NAME: Chatbot with Tools
    ICON: 🛠️
    DESCRIPTION: A chatbot augmented with tools (web access, code interpreter, etc.)
    TAG: 🤖 Chatbots

  chatbot_web_summary.py:
    NAME: Webpage summary
    ICON: 🌐
    DESCRIPTION: A model to synthetize to text content of a webpage.
    TAG: 🔄 Other

classification:
  __init__.py:
    NAME: Classification
    ICON: 🎯
    DESCRIPTION: Perform several types of classification!
    SIDEBAR: radio
    TAG: ⚙️ Machine Learning

  xgboost.py:
    NAME: Gradient Boosting
    ICON: 🌲
    DESCRIPTION: |
      Use gradient boosting for binary & multi-class classification!
      > XGBoost, scikit-learn, matplotlib
    TAG:

regression:
  __init__.py:
    NAME: Regression
    ICON: 📈
    DESCRIPTION: Perform several types of regression!
    SIDEBAR: radio
    TAG: ⚙️ Machine Learning

  xgboost.py:
    NAME: Gradient Boosting
    ICON: 🌲
    DESCRIPTION: |
      Use gradient boosting for regression!
      > XGBoost, scikit-learn
    TAG:

clustering:
  __init__.py:
    NAME: Clustering
    ICON: 🕸️
    DESCRIPTION: Perform different types of clustering!
    SIDEBAR: radio
    TAG: ⚙️ Machine Learning
