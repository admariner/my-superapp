import extra_streamlit_components as stx
import streamlit as st

import utils
from app.sidebar import Sidebar
from src.generative_ai.image_generation import (dall_e_image,
                                                stable_diffusion_image)

logger = utils.CustomLogger(__file__)

st.set_page_config(page_title="daltunay", page_icon="üß†", layout="centered")

utils.load_secrets()


def main():
    st.title("Image generation", anchor=False)

    st.caption(
        body="Using OpenAI's DALL¬∑E and Stable Diffusion models, this app performs image creation based on a user prompt.",
        help="[DALL¬∑E](https://openai.com/dall-e-2), [Stable Diffusion](https://stability.ai/stable-diffusion)",
        unsafe_allow_html=True,
    )

    utils.show_source_code(path="src/generative_ai/image_generation/")

    st.session_state.setdefault("sidebar", Sidebar()).main()

    st.markdown("Select one of the two following modes:")
    app_modes = {"DALL¬∑E": dall_e_image, "Stable Diffusion": stable_diffusion_image}
    selected_mode = stx.tab_bar(
        data=[
            stx.TabBarItemData(
                id=app_mode,
                title=f"Mode: {app_mode}",
                description=f"Image generation with {app_mode}",
            )
            for app_mode in app_modes
        ],
        return_type=str,
        default=None,
    )

    if selected_mode in app_modes:
        app = st.session_state.setdefault(selected_mode, app_modes[selected_mode])
        submitted = False

        with st.form(key="prompt_form", clear_on_submit=True):
            prompt = st.text_input(label="Input prompt: ")
            submitted = st.form_submit_button(
                label=f"Generate with {selected_mode}",
                use_container_width=True,
                type="primary",
            )
        st.subheader(body="Output", anchor=False)
        if submitted:
            with st.spinner("Generating image..."):
                image = app(prompt=prompt)
            st.image(image=image, caption=f"Generated by {selected_mode}")

    else:
        st.info(body="Please select a mode above", icon="‚ÑπÔ∏è")

    utils.show_logos(linkedin=True, github=True)


if __name__ == "__main__":
    main()
